version: '3.8'
services:
  postgres:
    #container_name: pg_container
    image: postgres:16-alpine
    restart: on-failure
    environment:
      POSTGRES_USER: data
      POSTGRES_PASSWORD: data
      POSTGRES_DB: data
    ports:
      - "5432:5432"
  
      
  pgadmin:
    #container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: on-failure
    environment:
      PGADMIN_DEFAULT_EMAIL: data@data.com
      PGADMIN_DEFAULT_PASSWORD: data
    ports:
      - "5050:80"
    

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: on-failure

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      #KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_CREATE_TOPIC: "btc_usdt:2:1"
    restart: on-failure


  consumer_ccxt: 
    build:
      context: ./kafka/consumer_ccxt
    depends_on:
      - kafka
      - postgres
    environment:
      POSTGRES_DB: data
      POSTGRES_USER: data
      POSTGRES_PASSWORD: data
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: btc_usdt
    restart: on-failure

  consumer_ws: 
    build:
      context: ./kafka/consumer_ws
    depends_on:
      - kafka
      - postgres
      - train-model
    environment:
      POSTGRES_DB: data
      POSTGRES_USER: data
      POSTGRES_PASSWORD: data
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
      KAFKA_SERVER: kafka:9092
      KAFKA_TOPIC: btc_usdt
      API_URL: http://api:8000/predict/
    volumes:
      - ./models:/app/models
    restart: on-failure

  producer_ccxt:
    build:
      context: ./kafka/producer_ccxt
    depends_on:
      - kafka
    environment:
      - KAFKA_SERVER=kafka:9092
    restart: on-failure

  producer_ws:
    build:
      context: ./kafka/producer_ws
    depends_on:
      - kafka
    environment:
      - KAFKA_SERVER=kafka:9092
    restart: on-failure

  kafkaui:
    image: provectuslabs/kafka-ui
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
    restart: on-failure

  fastapi:
    build:
      context: ./fastapi
    ports:
      - "8000:8000"
    depends_on:
      - kafka
      - postgres
    restart: on-failure

  streamlit:
    build:
      context: ./streamlit
    ports: 
     - "8501:8501"
    env_file:
     - .env 
    depends_on: 
      - fastapi
    restart: on-failure
    
  train-model:
    build: ./ml
    depends_on:
      - postgres
      - producer_ccxt
    environment:
      POSTGRES_DB: data
      POSTGRES_USER: data
      POSTGRES_PASSWORD: data
      POSTGRES_HOST: postgres
      POSTGRES_PORT: "5432"
    volumes:
      - ./models:/app/models
    restart: on-failure
    

